<?xml version="1.0" encoding="utf-8"?>
<project name="Alpha Street Test" basedir=".">
	<tstamp>
		<format property="CURRENT_TIME" pattern="dd-MMM-yyyy HH mm ss" />
	</tstamp>
	<property name="basedir" value="." />
	<property name="lib" value="${basedir}/lib" />
	<property name="src" value="${basedir}/src" />
	<property name="bin" value="${basedir}/bin" />
	<property file="${basedir}/config-files/project.properties" prefix="projectprop" />

	<property name="testng-report-dir" value="${basedir}/test-output" />
	<property name="log-report-dir" value="${basedir}/log" />
	<property name="testng-reports" location="${projectprop.ngreportBackup}/${jiraTICKET}-[${jiraUSER}]/testngReports-${CURRENT_TIME}" />
	<property name="log-reports" location="${projectprop.logBackup}/${jiraTICKET}-[${jiraUSER}]/logReports-${CURRENT_TIME}" />
	<property name="to-jenkins-Workspace" location="${projectprop.jenkinsRootPath}/jobs/${jiraTICKET}/workspace" />

	<property name="emailMailHost" value="${projectprop.emailMailHost}" />
	<property name="emailMailPort" value="${projectprop.emailMailPort}" />
	<property name="emailFromUser" value="${projectprop.emailFromUser}" />
	<property name="emailFromPassword" value="${projectprop.emailFromPassword}" />
	<property name="emailFromMail" value="${projectprop.emailFromMail}" />
	<property name="emailToList" value="${projectprop.emailToList}" />
	<property name="emailToCC" value="${projectprop.emailToCC}" />
	<property name="emailToBCC" value="${projectprop.emailToBCC}" />
	<property name="emailReplyTo" value="${projectprop.emailReplyTo}" />
	<property name="emailSubject" value="${projectprop.emailSubject}-${CURRENT_TIME}" />
	<property name="emailMessage" value="${projectprop.emailMessage}" />
	<property name="emailAttachment1Path=" value="${projectprop.emailAttachment1Path}" />

	<property name="loopCount" value="2" />
	<property name="waitTime" value="2000" />
	<property name="antBaseURL" value="http://30.dev.alphastreet.co/" />
	<property name="jiraTICKET" value="AS-Automation" />
	<property name="jiraUSER" value="kishorekalapala" />

	<!-- Setting Class path.-->
	<path id="classpath">
		<pathelement location="${bin}" />
		<fileset dir="${lib}" includes="*.jar">
			<include name="mail-1.4.7" />
			<include name="activation-1.1.1" />
		</fileset>
	</path>

	<!-- Backup Folder Info -->
	<target name="projectpropertiesfile">
		<echo>Log Backup Path : ${projectprop.logBackup}</echo>
		<echo>Testng Backup Path : ${projectprop.ngreportBackup}</echo>
	</target>

	<!-- Welcome Info -->
	<target name="info" depends="projectpropertiesfile">
		<property name="BaseURL" value="${projectprop.projectBaseURL}" />
		<echo>......................BaseURL: ${BaseURL} ......</echo>
	</target>

	<!-- Deleteing directories -->
	<target name="clean" depends="info">
		<echo message="deleting existing directories" />
		<delete dir="${bin}" />
		<echo message="deleting existing directory ${bin}" />
		<delete dir="${testng-report-dir}" />
		<echo message="deleting existing directory ${testng-report-dir}" />
		<delete dir="${log-report-dir}" />
		<echo message="deleting existing directory ${log-report-dir}" />
	</target>

	<!-- Creating directories -->
	<target name="create-directories" depends="clean">
		<echo> /* Create Directories */ </echo>
		<mkdir dir="${bin}" />
		<mkdir dir="${testng-report-dir}" />
	</target>

	<!-- build all java file to class binary -->
	<target name="compile" depends="create-directories">
		<echo> /* Compiling Directory Classes */ </echo>
		<javac srcdir="${src}" classpathref="classpath" includeantruntime="no" destdir="${bin}" />
	</target>

	<!-- Run failed testcases -->
	<target name="Rerun">
		<echo message="running failed test cases " />
		<testng classpath="${build.dir};${lib}/*">
			<xmlfileset dir="${basedir}/test-output" includes="testng-failed.xml" />
		</testng>
	</target>

	<!-- Runs the TestngFile and generates Reportng report for reportNG -->
	<target name="Run" depends="compile">
		<echo>/* AslphaStreet Automation TestCases..Executing */</echo>
		<taskdef name="testng" classname="org.testng.TestNGAntTask" classpathref="classpath" />
		<mkdir dir="${testng-report-dir}" />
		<testng outputdir="${testng-report-dir}" classpathref="classpath" useDefaultListeners="true" delegateCommandSystemProperties="true">
			<jvmarg value="-DantBaseURL=${antBaseURL}" />
			<jvmarg value="-DjiraUSER=${jiraUSER}" />
			<jvmarg value="-DjiraTICKET=${jiraTICKET}" />
			<xmlfileset dir="${basedir}" includes="testng.xml" />
			<!-- generate report title -->
			<sysproperty key="org.uncommons.reportng.title" value="Test Automation" />
			<sysproperty key="org.uncommons.reportng.escape-output" value="true" />
		</testng>
	</target>

	<!-- Runs the TestngFile and generates Reportng report for reportNG -->
	<target name="AvgPageLoadTimeTest" depends="compile">
		<echo>/* Message="Runnuing -Avg Page Load Time Test-" */</echo>
		<echo>...............Page Loopcount: ${loopCount} .....</echo>
		<echo>........Page To Page WaitTime: ${waitTime} ms.....</echo>
		<taskdef name="testng" classname="org.testng.TestNGAntTask" classpathref="classpath" />
		<mkdir dir="${testng-report-dir}" />
		<testng outputdir="${testng-report-dir}" classpathref="classpath" useDefaultListeners="true" delegateCommandSystemProperties="true">
			<jvmarg value="-DantBaseURL=${antBaseURL}" />
			<jvmarg value="-DloopCount=${loopCount}" />
			<jvmarg value="-DwaitTime=${waitTime}" />
			<jvmarg value="-DjiraUSER=${jiraUSER}" />
			<jvmarg value="-DjiraTICKET=${jiraTICKET}" />
			<xmlfileset dir="${basedir}" includes="avgPageTimeLoadTest.xml" />
			<!-- generate report title -->
			<sysproperty key="org.uncommons.reportng.title" value="Page Load Time Test Automation" />
			<sysproperty key="org.uncommons.reportng.escape-output" value="true" />
		</testng>
	</target>

	<!-- Mail Task-->
	<target name="SendMail" description="Execute and Send Reports to Mails.">
		<taskdef name="classloadertask" classname="org.apache.tools.ant.taskdefs.ClassloaderTask" classpathref="classpath" />
		<mail mailhost="${emailMailHost}" mailport="${emailMailPort}" user="${emailFromUser}" password="${emailFromPassword}" tolist="${emailToList}" subject="${emailSubject}" charset="ISO-8859-1" messagemimetype="text/html">
			<from address="${emailFromMail}" />
			<cc address="${emailToCC}" />
			<bcc address="${emailToBCC}" />
			<message>"${emailMessage}"</message>
			<attachments>
				<fileset dir="${log-report-dir}">
					<include name="AutomationLog.html" />
				</fileset>
			</attachments>
		</mail>
	</target>

	<!-- Copy Results To User's Jenikins Workspace-->
	<target name="ToJenkins">
		<mkdir dir="${to-jenkins-Workspace}" />
		<copy todir="${to-jenkins-Workspace}" overwrite="false">
			<fileset dir="${testng-report-dir}">
			</fileset>
		</copy>
	</target>

	<!-- copy testng Reports To Specified folder(@project properties file)-->
	<target name="BackupTestng">
		<mkdir dir="${testng-reports}" />
		<copy todir="${testng-reports}" overwrite="false">
			<fileset dir="${testng-report-dir}">
			</fileset>
		</copy>
	</target>

	<!-- copy log Reports To Specified folder(@project properties file)-->
	<target name="BackupLog">
		<mkdir dir="${log-reports}" />
		<copy todir="${log-reports}" overwrite="false">
			<fileset dir="${log-report-dir}">
			</fileset>
		</copy>
	</target>

	<target name="antrun" depends="Run,BackupLog,BackupTestng">
		<echo>Target called antrun,Backup_logResults and Backup_testngresults</echo>
		<echo>Taking Backup_Log			 ${log-reports}</echo>
		<echo>Taking Backup_Testng		 ${testng-reports}</echo>
		<echo>and  Report to workspace	 ${to-jenkins-Workspace}</echo>
	</target>

	<target name="jenkinsrun" depends="Run,BackupLog,BackupTestng,ToJenkins">
		<echo>Target called jenkinsrun,Backup_logResults,Backup_testngresults and jenkins_Job_workspace also</echo>
		<echo>Taking Backup_Log to 	${log-reports}</echo>
		<echo>Taking Backup_Testng to	 ${testng-reports}</echo>
		<echo>Taking TestngReports to	 ${to-jenkins-Workspace}</echo>
	</target>

	<target name="jenkinsrerun" depends="Rerun,BackupLog,BackupTestng,ToJenkins">
		<echo>Target called jenkinsrerun, Backup_logResults, Backup_testngresults and jenkins_Job_workspace also</echo>
		<echo>**HERE WE ARE TRYING TO RUN FAILED TESTCASES OF PREVIOUS BUILD</echo>
		<echo>Taking Backup_Log	 ${log-reports}</echo>
		<echo>Taking Backup_Testng	 ${testng-reports}</echo>
		<echo>Taking TestngReports to	 ${to-jenkins-Workspace}</echo>
	</target>

		</project>